(()=>{"use strict";var e={931:(e,t,n)=>{function r(){document.addEventListener("DOMContentLoaded",(function(){var e,t={root:null,threshold:0,rootMargin:"200px"};function n(e){var n=new IntersectionObserver((function(e,t){e.forEach((function(e){if(e.isIntersecting){var t=e.target;t.src=t.dataset.src,t.classList.remove("lazy"),n.unobserve(t)}}))}),t);e.forEach((function(e){n.observe(e)}))}if("IntersectionObserver"in window){n(e=document.querySelectorAll(".lazy")),new MutationObserver((function(e){e.forEach((function(e){"childList"===e.type&&n(e.target.querySelectorAll(".lazy"))}))})).observe(document.body,{childList:!0,subtree:!0})}else{var r,o=function t(){r&&clearTimeout(r),r=setTimeout((function(){var n=window.pageYOffset;e.forEach((function(e){e.offsetTop<window.innerHeight+n&&(e.src=e.dataset.src,e.classList.remove("lazy"))})),0==e.length&&(document.removeEventListener("scroll",t),window.removeEventListener("resize",t),window.removeEventListener("orientationChange",t))}),20)};e=document.querySelectorAll(".lazy"),document.addEventListener("scroll",o),window.addEventListener("resize",o),window.addEventListener("orientationChange",o)}}))}n.d(t,{Z:()=>r})}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(0,n(931).Z)()})();